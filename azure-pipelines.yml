trigger:
- main

resources:
- repo: self

variables:
  buildConfiguration: 'Release'
  vmImageName: 'ubuntu-latest'
  artifactWebApp: 'siteContagem'

stages:
- stage: Build
  displayName: Build da Web App
  jobs:
  - job: Build
    displayName: Build da Web App em .NET
    pool:
      vmImage: $(vmImageName)
    steps:
    - script: dotnet --list-sdks
      displayName: Exibir versões do .NET instaladas
    - task: UseDotNet@2
      displayName: Instalar .NET 6 Preview 5
      inputs:
        packageType: 'sdk'
        version: '6.0.100-preview.5.21302.13'
        includePreviewVersions: true
    - script: dotnet --version
      displayName: Exibir versão default do .NET
    - task: DotNetCoreCLI@2
      displayName: Build + Publish gerando Artifact
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: True
    - task: PublishPipelineArtifact@1
      displayName: Publish do Artifact
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)' 
        artifactName: $(artifactWebApp)
- stage: Deployment
  displayName: Deployment da Web App
  dependsOn: Build
  jobs:
  - job: Deployment
    displayName: Deployment da Web App no Azure
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download do Artifact gerado no stage de Build
      inputs:
        buildType: 'current'
        artifactName: $(artifactWebApp)
        targetPath: '$(System.DefaultWorkingDirectory)/publish'
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'AZURE SUBSCRIPTION'
        appType: 'webAppLinux'
        WebAppName: 'nomerecurso'
        packageForLinux: '$(System.DefaultWorkingDirectory)/publish/*.zip'